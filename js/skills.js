// Generated by CoffeeScript 1.9.3
(function() {
  var generateChart, grade, i, j, len, len1, ref, ref1, removeXLabel, renderSkillTitle, skill;

  removeXLabel = function(chart) {
    return chart.svg().append('text').attr('class', 'x-axis-label').attr('text-anchor', 'middle').text('');
  };

  generateChart = function(section, skill, renderTitle) {
    return d3.csv("data/" + section + "/" + skill + ".csv", function(data) {
      var chart, grades, name, ndx;
      ndx = crossfilter(data);
      name = ndx.dimension(function(d) {
        return d.Name;
      });
      grades = name.group().reduceSum(function(d) {
        return d.Grade;
      });
      chart = dc.rowChart("#" + skill).width(500).height((data.length + 1) * 40).x(d3.scale.ordinal()).elasticX(true).title(renderTitle || function(p) {
        return p.value;
      }).transitionDuration(2000).colorAccessor(function(d) {
        return d.value * .1;
      }).colors(["#ff0000", "#ff4400", "#ff8800", "#ffaa00", "#eeff00", "#aaff00", "#88ff22", "#44ff22", "#00ff22"]).dimension(name).group(grades);
      chart.xAxis().tickValues([]);
      chart.render();
      return removeXLabel(chart);
    });
  };

  renderSkillTitle = function(p) {
    switch (p.value) {
      case 1:
        return 'Beginner';
      case 2:
        return 'Beginner';
      case 3:
        return 'Beginner';
      case 4:
        return 'Beginner';
      case 5:
        return 'Intermediate';
      case 6:
        return 'Intermediate';
      case 7:
        return 'Intermediate';
      case 8:
        return 'Advanced';
      case 9:
        return 'Advanced';
      case 10:
        return 'Advanced';
      default:
        return '';
    }
  };

  ref = ['languages', 'frameworks', 'typesetting', 'webdev', 'build-deployment'];
  for (i = 0, len = ref.length; i < len; i++) {
    skill = ref[i];
    generateChart("skills", skill, renderSkillTitle);
  }

  ref1 = ['year-1', 'year-2', 'year-3', 'year-4', 'year-5', 'year-6', 'msc-1', 'msc-2'];
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    grade = ref1[j];
    generateChart("grades", grade);
  }

}).call(this);
